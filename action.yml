name: 'Run terraform validate with reviewdog'
description: 'TODO: üê∂ Run terraform validate with reviewdog on pull requests to improve code review experience.'
author: 'maru'
inputs:
  github_token:
    description: 'GITHUB_TOKEN'
    default: '${{ github.token }}'
  workdir:
    description: 'Working directory relative to the root directory.'
    default: '.'
  terraform_cloud_token:
    description: 'The terraform token for authentication with private registries.'
    default: ''
  ### Flags for reviewdog ###
  level:
    description: 'Report level for reviewdog [info,warning,error]'
    default: 'error'
  reporter:
    description: 'Reporter of reviewdog command [github-pr-check,github-pr-review].'
    default: 'github-pr-check'
  filter_mode:
    description: |
      Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
      Default is added.
    default: 'added'
  fail_level:
    description: |
      If set to `none`, always use exit code 0 for reviewdog.
      Otherwise, exit code 1 for reviewdog if it finds at least 1 issue with severity greater than or equal to the given level.
      Possible values: [none,any,info,warning,error]
      Default is `none`.
    default: 'none'
  fail_on_error:
    description: |
      Deprecated, use `fail_level` instead.
      Exit code for reviewdog when errors are found [true,false]
      Default is `false`.
    deprecationMessage: Deprecated, use `fail_level` instead.
    default: 'false'
  name:
    description: |
      Tool name shown in review comment for reviewdog.
      Also acts as an identifier for determining which comments reviewdog should overwrite.
      Useful in monorepos with multiple root modules where terraform validate needs to run multiple times.
    default: 'terraform validate'
  reviewdog_flags:
    description: 'Additional reviewdog flags'
    default: ''
  ### Variables for terraform validate ###
  terraform_version:
    description: 'The terraform version to install and use.'
    default: '1.9.3'
  cli:
    description: 'Execution tool name. e.g.) "terraform", "opentofu"'
    default: "terraform"
runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.terraform_version }}
    - ${{ inputs.cli }}

# Ref: https://haya14busa.github.io/github-action-brandings/
# TODO: update branding if you want.
branding:
  icon: 'check'
  color: 'blue'
